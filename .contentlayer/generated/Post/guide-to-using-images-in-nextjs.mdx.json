{
  "title": "Images in Next.js",
  "date": "2023-07-11T00:00:00.000Z",
  "summary": "In this article we introduce adding images in the tailwind starter blog and the benefits and limitations of the next/image component.",
  "image": "https://miro.medium.com/v2/resize:fit:786/format:webp/1*sg_oME8UNK1jf45o9e6LfQ.png",
  "body": {
    "raw": "\n# Introduction\n\nThe tailwind starter blog has out of the box support for [Next.js's built-in image component](https://nextjs.org/docs/api-reference/next/image) and automatically swaps out default image tags in markdown or mdx documents to use the Image component provided.\n\n# Usage\n\nTo use in a new page route / javascript file, simply import the image component and call it e.g.\n\n```js\nimport Image from 'next/image'\n\nfunction Home() {\n  return (\n    <>\n      <h1>My Homepage</h1>\n      <Image src=\"/me.png\" alt=\"Picture of the author\" width={500} height={500} />\n      <p>Welcome to my homepage!</p>\n    </>\n  )\n}\n\nexport default Home\n```\n\nFor a markdown file, the default image tag can be used and the default `img` tag gets replaced by the `Image` component in the build process.\n\nAssuming we have a file called `ocean.jpg` in `data/img/ocean.jpg`, the following line of code would generate the optimized image.\n\n```\n![ocean](/static/images/ocean.jpg)\n```\n\nAlternatively, since we are using mdx, we can just use the image component directly! Note, that you would have to provide a fixed width and height. The `img` tag method parses the dimension automatically.\n\n```js\n<Image alt=\"ocean\" src=\"/static/images/ocean.jpg\" width={256} height={128} />\n```\n\n_Note_: If you try to save the image, it is in webp format, if your browser supports it!\n\n![car](https://images.unsplash.com/photo-1694033996901-60322b8740dc?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1172&q=80)\n\nPhoto by [Karsten Winegeart](https://unsplash.com/photos/a-blue-land-rover-parked-in-front-of-a-mountain-C-we3byAFyg)\non [Unsplash](https://unsplash.com/@karsten116)\n\n# Benefits\n\n- Smaller image size with Webp (~30% smaller than jpeg)\n- Responsive images - the correct image size is served based on the user's viewport\n- Lazy loading - images load as they are scrolled to the viewport\n- Avoids [Cumulative Layout Shift](https://web.dev/cls/)\n- Optimization on demand instead of build-time - no increase in build time!\n\n# Limitations\n\n- Due to the reliance on `next/image`, unless you are using an external image CDN like Cloudinary or Imgix, it is practically required to use Vercel for hosting. This is because the component acts like a serverless function that calls a highly optimized image CDN.\n\n  If you do not want to be tied to Vercel, you can remove `imgToJsx` in `remarkPlugins` in `lib/mdx.js`. This would avoid substituting the default `img` tag.\n\n  Alternatively, one could wait for image optimization at build time to be supported. A different library, [next-optimized-images](https://github.com/cyrilwanner/next-optimized-images) does that, although it requires transforming the images through webpack which is not done here.\n\n- Images from external links are not passed through `next/image`\n- All images have to be stored in the `public` folder e.g `/static/images/ocean.jpeg`\n",
    "code": "var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var f=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),b=(i,e)=>{for(var t in e)o(i,t,{get:e[t],enumerable:!0})},l=(i,e,t,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of g(e))!u.call(i,a)&&a!==t&&o(i,a,{get:()=>e[a],enumerable:!(r=m(e,a))||r.enumerable});return i};var w=(i,e,t)=>(t=i!=null?h(p(i)):{},l(e||!i||!i.__esModule?o(t,\"default\",{value:i,enumerable:!0}):t,i)),x=i=>l(o({},\"__esModule\",{value:!0}),i);var d=f((D,c)=>{c.exports=_jsx_runtime});var I={};b(I,{default:()=>v,frontmatter:()=>y});var n=w(d()),y={title:\"Images in Next.js\",date:new Date(16890336e5),summary:\"In this article we introduce adding images in the tailwind starter blog and the benefits and limitations of the next/image component.\",image:\"https://miro.medium.com/v2/resize:fit:786/format:webp/1*sg_oME8UNK1jf45o9e6LfQ.png\"};function s(i){let e=Object.assign({h1:\"h1\",p:\"p\",a:\"a\",pre:\"pre\",code:\"code\",em:\"em\",img:\"img\",ul:\"ul\",li:\"li\"},i.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Introduction\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The tailwind starter blog has out of the box support for \",(0,n.jsx)(e.a,{href:\"https://nextjs.org/docs/api-reference/next/image\",children:\"Next.js's built-in image component\"}),\" and automatically swaps out default image tags in markdown or mdx documents to use the Image component provided.\"]}),`\n`,(0,n.jsx)(e.h1,{children:\"Usage\"}),`\n`,(0,n.jsx)(e.p,{children:\"To use in a new page route / javascript file, simply import the image component and call it e.g.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`import Image from 'next/image'\n\nfunction Home() {\n  return (\n    <>\n      <h1>My Homepage</h1>\n      <Image src=\"/me.png\" alt=\"Picture of the author\" width={500} height={500} />\n      <p>Welcome to my homepage!</p>\n    </>\n  )\n}\n\nexport default Home\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"For a markdown file, the default image tag can be used and the default \",(0,n.jsx)(e.code,{children:\"img\"}),\" tag gets replaced by the \",(0,n.jsx)(e.code,{children:\"Image\"}),\" component in the build process.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Assuming we have a file called \",(0,n.jsx)(e.code,{children:\"ocean.jpg\"}),\" in \",(0,n.jsx)(e.code,{children:\"data/img/ocean.jpg\"}),\", the following line of code would generate the optimized image.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`![ocean](/static/images/ocean.jpg)\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Alternatively, since we are using mdx, we can just use the image component directly! Note, that you would have to provide a fixed width and height. The \",(0,n.jsx)(e.code,{children:\"img\"}),\" tag method parses the dimension automatically.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`<Image alt=\"ocean\" src=\"/static/images/ocean.jpg\" width={256} height={128} />\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:\"Note\"}),\": If you try to save the image, it is in webp format, if your browser supports it!\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://images.unsplash.com/photo-1694033996901-60322b8740dc?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1172&q=80\",alt:\"car\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Photo by \",(0,n.jsx)(e.a,{href:\"https://unsplash.com/photos/a-blue-land-rover-parked-in-front-of-a-mountain-C-we3byAFyg\",children:\"Karsten Winegeart\"}),`\non `,(0,n.jsx)(e.a,{href:\"https://unsplash.com/@karsten116\",children:\"Unsplash\"})]}),`\n`,(0,n.jsx)(e.h1,{children:\"Benefits\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Smaller image size with Webp (~30% smaller than jpeg)\"}),`\n`,(0,n.jsx)(e.li,{children:\"Responsive images - the correct image size is served based on the user's viewport\"}),`\n`,(0,n.jsx)(e.li,{children:\"Lazy loading - images load as they are scrolled to the viewport\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"Avoids \",(0,n.jsx)(e.a,{href:\"https://web.dev/cls/\",children:\"Cumulative Layout Shift\"})]}),`\n`,(0,n.jsx)(e.li,{children:\"Optimization on demand instead of build-time - no increase in build time!\"}),`\n`]}),`\n`,(0,n.jsx)(e.h1,{children:\"Limitations\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Due to the reliance on \",(0,n.jsx)(e.code,{children:\"next/image\"}),\", unless you are using an external image CDN like Cloudinary or Imgix, it is practically required to use Vercel for hosting. This is because the component acts like a serverless function that calls a highly optimized image CDN.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you do not want to be tied to Vercel, you can remove \",(0,n.jsx)(e.code,{children:\"imgToJsx\"}),\" in \",(0,n.jsx)(e.code,{children:\"remarkPlugins\"}),\" in \",(0,n.jsx)(e.code,{children:\"lib/mdx.js\"}),\". This would avoid substituting the default \",(0,n.jsx)(e.code,{children:\"img\"}),\" tag.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Alternatively, one could wait for image optimization at build time to be supported. A different library, \",(0,n.jsx)(e.a,{href:\"https://github.com/cyrilwanner/next-optimized-images\",children:\"next-optimized-images\"}),\" does that, although it requires transforming the images through webpack which is not done here.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Images from external links are not passed through \",(0,n.jsx)(e.code,{children:\"next/image\"})]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"All images have to be stored in the \",(0,n.jsx)(e.code,{children:\"public\"}),\" folder e.g \",(0,n.jsx)(e.code,{children:\"/static/images/ocean.jpeg\"})]}),`\n`]}),`\n`]})]})}function j(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,Object.assign({},i,{children:(0,n.jsx)(s,i)})):s(i)}var v=j;return x(I);})();\n;return Component;"
  },
  "_id": "guide-to-using-images-in-nextjs.mdx",
  "_raw": {
    "sourceFilePath": "guide-to-using-images-in-nextjs.mdx",
    "sourceFileName": "guide-to-using-images-in-nextjs.mdx",
    "sourceFileDir": ".",
    "contentType": "mdx",
    "flattenedPath": "guide-to-using-images-in-nextjs"
  },
  "type": "Post",
  "url": "/blog/guide-to-using-images-in-nextjs"
}